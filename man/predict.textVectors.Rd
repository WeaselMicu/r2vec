% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/text_to_sparse_matrix.R
\name{predict.textVectors}
\alias{predict.textVectors}
\title{Take a sparse text matrix and construct a matric with the same specification from a new dataset}
\usage{
\method{predict}{textVectors}(object, newdata = NULL, verbose = FALSE, ...)
}
\arguments{
\item{object}{object of class textVectors}

\item{newdata}{new data to apply the same matrix format to}

\item{verbose}{print diagnostic messages}

\item{...}{ignored}
}
\value{
a textVectors object
}
\description{
This code takes an existing sparse text matrix, and a character vector of new data.  It then tokenizes the new data, spellchecks it (todo),
applies n-grams, and uses the bag of words from the input matrix to contruct a new matrix with the exact same columns.  It then optionally
applies the input matrix's tf-idf weightings to the new matrix and returns a new textVectors object. TODO: COMBINE THIS WITH THE MATRIX FUNCTION!!!
}
\examples{
x <- c(
  'i like this package written by zach mayer',
  'this package is so much fun',
  'thanks zach for writing it',
  'this package is the best package',
  'i want to give zach mayer a million dollars')
y <- 'this is a new sentence about how much i like this package written
by zach mayer it is a cool package and he is a cool dude'
a <- textVectors(
  x,
  absCutoff=1, ngrams=2, stem=TRUE, verbose=TRUE)
b <- textVectors(
  x,
  absCutoff=1, ngrams=2, stem=TRUE, verbose=TRUE, tfidf=TRUE)
predict(a, y)
predict(b, y)
}
\references{
\url{http://stackoverflow.com/questions/4942361/how-to-turn-a-list-of-lists-to-a-sparse-matrix-in-r-without-using-lapply}
\url{http://en.wikipedia.org/wiki/Tf-idf}
}

